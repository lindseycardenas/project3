{"version":3,"sources":["utils/API.js","pages/Form/index.js","components/Item/index.js","components/Target/index.js","components/Counter/index.js","pages/Grid/index.js","pages/Home/index.js","components/Toggle/index.js","pages/Portion/index.js","App.js","registerServiceWorker.js","index.js","pages/Home/css/img/plate.png"],"names":["API","getUsers","axios","get","getsUser","id","deleteUser","delete","saveUser","userData","console","log","post","Form","state","firstName","lastName","email","weight","height","age","gender","handleInputChange","event","target","name","value","_this","setState","Object","defineProperty","handleChange","handleFormSubmit","preventDefault","then","res","JSON","catch","err","this","react_default","a","createElement","className","onChange","type","placeholder","onClick","Component","Item","_this$props","props","isDragging","connectDragSource","size","style","width","margin","border","color","DragSource","beginDrag","monitor","getItem","endDrag","component","connect","dragSource","Target","connectDropTarget","portions","map","portion","indx","components_Item","key","float","meal","DropTarget","drop","item","handleDrop","dropTarget","isOver","canDrop","Counter","portionDailyTarget","element","index","measurement","plan","plans","Grid","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","createPortions","portionItem","i","list","fraction","push","moveItem","itemId","decrementPortion","meals","length","j","newPortions","updatedPortions","filter","meals.portionIds","portionIndex","parseInt","charAt","isFraction","slice","stateCopy","assign","_this2","createdPortions","reduce","allPortions","portionArrays","concat","_this3","fruit","vegetables","grains","protein","dairy","targets","components_Target","components_Counter","clear","DragDropContext","HTML5Backend","Home","src","logo","alt","href","React","Toggle","on","toggle","children","Portion","components_Toggle","_ref","_ref2","_ref3","_ref4","_ref5","bttn-jelly","App","BrowserRouter","Route","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.293a96d2.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n    // Gets all books\n    getUsers: function () {\n        return axios.get(\"/api/users\");\n    },\n    // Gets the book with the given id\n    getsUser: function (id) {\n        return axios.get(\"/api/users/\" + id);\n    },\n    // Deletes the book with the given id\n    deleteUser: function (id) {\n        return axios.delete(\"/api/users/\" + id);\n    },\n    // Saves a book to the database\n    saveUser: function (userData) {\n        console.log(\"in APIU\", userData);\n        return axios.post(\"/api/users\", userData);\n\n    }\n};","import React, { Component } from \"react\";\nimport API from \"../../utils/API\"\n// import axios from \"axios\";\n\nclass Form extends Component {\n    // Setting the component's initial state\n\n    state = {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        weight: 0,\n        height: 0,\n        age: 0,\n        gender: ''\n\n    };\n\n    // calculatePortionTier = event => {\n    //     if (this.state.gender === 'male') {\n\n    //     }\n    //     // maleTier = (10 * this.state.weight + 6.25 * this.state.height - 5 * this.state.age + 5)\n\n    // }\n\n\n    handleInputChange = event => {\n        console.log(event.target.name);\n        // Getting the value and name of the input which triggered the change\n        let value = event.target.value;\n        const name = event.target.name;\n\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleChange = (event) => {\n        this.setState({ gender: event.target.value });\n    }\n\n    handleFormSubmit = event => {\n        // Preventing the default behavior of the form submit (which is to refresh the page)\n        event.preventDefault();\n        console.log(this.state);\n\n        if (this.state.firstName && this.state.email) {\n            API.saveUser({\n                firstName: this.state.firstName,\n                lastName: this.state.lastName,\n                email: this.state.email,\n                weight: this.state.weight,\n                height: this.state.height,\n                age: this.state.age,\n                gender: this.state.gender\n            })\n                .then(res => {\n                    console.log(JSON);\n                    // this.loadUser();\n                    // this.calculatePortionTier();\n                }).catch(err => console.log(err));\n        }\n\n        // let firstName = this.state.firstName;\n        // let lastName = this.state.lastName;\n\n        // if (!this.state.firstName || !this.state.lastName || !this.state.email || !this.state.weight || !this.state.height || !this.state.age) {\n        //     alert(\"Please fill out all submission fields!\");\n        // } else {\n        //     console.log(firstName, lastName);\n\n        // }\n\n    };\n\n    render() {\n        console.log(\"render method: \", this.state)\n        return (\n            <div>\n                <h1>So, tell us about yourself</h1>\n                <p>\n                    We're here to help you crush it,  {this.state.firstName} {this.state.lastName}\n                </p>\n                <form className=\"form\">\n                    <input\n                        value={this.state.firstName}\n                        name=\"firstName\"\n                        onChange={this.handleInputChange}\n                        type=\"text\"\n                        placeholder=\"First Name\"\n                    />\n                    <input\n                        value={this.state.lastName}\n                        name=\"lastName\"\n                        onChange={this.handleInputChange}\n                        type=\"text\"\n                        placeholder=\"Last Name\"\n                    />\n                    <input\n                        value={this.state.email}\n                        name=\"email\"\n                        onChange={this.handleInputChange}\n                        type=\"email\"\n                        placeholder=\"Email\"\n                    />\n                    <input\n                        value={this.state.weight}\n                        name=\"weight\"\n                        onChange={this.handleInputChange}\n                        type=\"weight\"\n                        placeholder=\"Weight(lbs)\"\n                    />\n                    <input\n                        value={this.state.height}\n                        name=\"height\"\n                        onChange={this.handleInputChange}\n                        type=\"height\"\n                        placeholder=\"Height(in)\"\n                    />\n                    <input\n                        value={this.state.age}\n                        name=\"age\"\n                        onChange={this.handleInputChange}\n                        type=\"aged\"\n                        placeholder=\"age (years)\"\n                    />\n                    <label>\n                        Pick your gender identity:\n                    <select name='gender'\n                            value={this.state.gender}\n                            onChange={this.handleChange}>\n                            <option value=\"default\">choose your gender</option>\n                            <option value=\"male\">male</option>\n                            <option value=\"female\">female</option>\n                            <option value=\"non-gender-binary\">Non-gender binary</option>\n                        </select>\n                    </label>\n                    <button className=\"submit\" onClick={this.handleFormSubmit}>Submit</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Form;","import React, { Component } from \"react\";\nimport { DragSource } from \"react-dnd\";\n\nconst Types = {\n    ITEM: \"portion\"\n};\n\nconst itemSource = {\n    beginDrag(props) {\n        const item = { id: props.id }\n        return item;\n    },\n\n    isDragging(props, monitor) {\n        return monitor.getItem().id === props.id;\n    },\n\n    endDrag(props, monitor, component) {\n        return props.id\n    }\n}\n\nfunction collect(connect, monitor) {\n    return {\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging()\n    }\n}\n\nclass Item extends Component {\n    render() {\n        const { isDragging, connectDragSource } = this.props;\n        return connectDragSource(\n            this.props.size === 1 ?\n                < div style={{ \"width\": \"80px\", \"margin\": \"5px\", \"border\": \"1px solid black\" }}>\n                    {!isDragging && <span>{this.props.type}</span>}\n                    {isDragging && <div style={{ \"width\": \"80px\", \"margin\": \"5px\", \"color\": \"lightgrey\", \"border\": \"1px solid lightgrey\" }}>{this.props.type}</div>}\n\n                </div >\n                :\n                < div style={{ \"width\": \"40px\", \"margin\": \"5px\", \"border\": \"1px solid black\" }}>\n                    {!isDragging && <span>{this.props.type}</span>}\n                    {isDragging && <div style={{ \"width\": \"40px\", \"margin\": \"5px\", \"color\": \"lightgrey\", \"border\": \"1px solid lightgrey\" }}>{this.props.type}</div>}\n\n                </div >\n        )\n    }\n}\n\nexport default DragSource(Types.ITEM, itemSource, collect)(Item)","import React, { Component } from \"react\";\nimport { DropTarget } from \"react-dnd\";\nimport Item from \"../Item\";\n\nconst Types = {\n    ITEM: \"portion\"\n};\n\nconst dropTarget = {\n    drop(props, monitor, component) {\n        const item = monitor.getItem().id;\n        const meal = props.meal;\n\n        return props.handleDrop(item, meal)\n    }\n}\n\nfunction collect(connect, monitor) {\n    return {\n        connectDropTarget: connect.dropTarget(),\n        isOver: monitor.isOver(),\n        canDrop: monitor.canDrop()\n    }\n}\n\nclass Target extends Component {\n\n    render() {\n\n        // const { canDrop, isOver, connectDropTarget, portions } = this.props;\n        // const isActive = canDrop && isOver;\n        // const style = {\n        //     width: \"200px\",\n        //     height: \"404px\",\n        //     border: '1px dashed gray'\n        // };\n        // const backgroundColor = isActive ? 'lightgreen' : '#FFF';\n\n        const { connectDropTarget } = this.props;\n\n        const portions = this.props.portions.map((portion, indx) => {\n            return <Item size={portion.size} type={portion.type} id={portion.id} key={portion.id} />\n        });\n\n        return connectDropTarget(\n            <div style={{ \"float\": \"left\", \"height\": \"150px\", \"width\": \"250px\", \"border\": \"5px solid yellow\" }}>\n                <div style={{ \"border\": \"5px solid green\" }}>\n                    {this.props.meal}\n                </div>\n                {portions}\n            </div>\n\n        )\n    }\n}\n\nexport default DropTarget(Types.ITEM, dropTarget, collect)(Target);","import React from \"react\";\n\nfunction Counter(props) {\n    // console.log(props)\n    return (\n        <div>\n\n            {props.portionDailyTarget.map((element, index) => {\n                return (\n                    <div key={index}>\n                        <div key={index}>{element.type} group: {element.portion} in {element.measurement} remaining. </div>\n                    </div>\n                )\n            }\n            )}\n        </div>\n    )\n}\n\nexport default Counter;","import React, { Component } from \"react\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport { DragDropContext } from \"react-dnd\";\n\nimport Item from \"../../components/Item\"\nimport Target from \"../../components/Target\"\nimport Counter from \"../../components/Counter\"\nimport plans from \"../../plans.json\";\n\n//Acess plan from the json tier object\nlet plan = plans[0].plan;\nlet portions = plans[0].portions;\n\nclass Grid extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            plan,\n            portions,\n            newPortions: [],\n            meals: [\n                {\n                    meal: \"breakfast\",\n                    portions: []\n                }\n                ,\n                {\n                    meal: \"snack-1\",\n                    portions: []\n                },\n                {\n                    meal: \"lunch\",\n                    portions: []\n                },\n                {\n                    meal: \"snack-2\",\n                    portions: []\n                },\n                {\n                    meal: \"dinner\",\n                    portions: []\n                }]\n        }\n    }\n\n    componentDidMount() {\n        let createdPortions = this.state.portions.map((item, index) => {\n            //creating arrays of portions\n            return this.createPortions(item, index)\n            //reducing them to one array\n        }).reduce((allPortions, portionArrays) => {\n            return allPortions.concat(portionArrays)\n        }, []);\n\n        this.setState({\n            newPortions: createdPortions\n        })\n    }\n\n    //create portions based on the number provided by the database\n    createPortions = (portionItem, index) => {\n        const list = [];\n        const fraction = portionItem.portion % 1;\n        let i;\n        // franction is not added with a forloop, therefore needs to start at 1\n        if (fraction === 0) {\n            i = 0\n        } else {\n            i = 1\n        }\n        for (i; i < portionItem.portion; i++) {\n            list.push(\n                {\n                    type: portionItem.type,\n                    id: index + \"-\" + i,\n                    size: 1\n                }\n            )\n        }\n        //if there's a fraction of the portion remaining, add it as a 0.5 size\n        if (fraction !== 0) {\n            list.push(\n                {\n                    type: portionItem.type,\n                    id: index + \"-\" + fraction,\n                    size: fraction\n                }\n            )\n        }\n        // return an array of objects representing each portion of the particular food group\n        return list;\n    }\n\n    moveItem = (itemId, meal) => {\n        this.decrementPortion(itemId);\n        // console.log(`Meal target: ${meal} for item: ${itemId}`)\n        // console.log(this.state.meals[0].portions);\n        for (let i = 0; i < this.state.meals.length; i++) {\n\n            if (meal === this.state.meals[i].meal) {\n\n                for (let j = 0; j < this.state.newPortions.length; j++) {\n\n                    if (itemId === this.state.newPortions[j].id) {\n\n                        const portion = {\n                            id: this.state.newPortions[j].id,\n                            type: this.state.newPortions[j].type,\n                            size: this.state.newPortions[j].size\n                        }\n\n                        const updatedPortions = this.state.newPortions.filter((portion) => {\n                            return portion.id !== itemId\n                        })\n\n                        this.setState({\n                            \"meals.portionIds\": this.state.meals[i].portions.push(portion),\n                            \"newPortions\": updatedPortions\n                        })\n\n                    }\n                }\n            }\n        }\n    };\n\n    decrementPortion = (index) => {\n        let portionIndex = parseInt(index.charAt(0));\n        let isFraction = index.slice(3);\n        //when and Item gets moved, decrement portion\n        for (let i = 0; i < this.state.portions.length; i++) {\n            if (portionIndex === i) {\n\n                let stateCopy = Object.assign({}, this.state.portions);\n\n                if (isFraction === \".5\") {\n                    stateCopy[i].portion -= 0.5;\n                } else {\n                    stateCopy[i].portion -= 1;\n                }\n\n                this.setState(stateCopy);\n            };\n        };\n    }\n\n    render() {\n\n        const fruit = this.state.newPortions.map((portion, indx) => {\n            return (portion.type === \"fruit\" ?\n                <Item size={portion.size} type={portion.type} id={portion.id} key={portion.id} /> : \"\")\n        });\n\n        const vegetables = this.state.newPortions.map((portion, indx) => {\n            return (portion.type === \"vegetable\" ?\n                <Item size={portion.size} type={portion.type} id={portion.id} key={portion.id} /> : \"\")\n        });\n        const grains = this.state.newPortions.map((portion, indx) => {\n            return (portion.type === \"grains\" ?\n                <Item size={portion.size} type={portion.type} id={portion.id} key={portion.id} /> : \"\")\n        });\n\n        const protein = this.state.newPortions.map((portion, indx) => {\n            return (portion.type === \"protein\" ?\n                <Item size={portion.size} type={portion.type} id={portion.id} key={portion.id} /> : \"\")\n        });\n\n        const dairy = this.state.newPortions.map((portion, indx) => {\n            return (portion.type === \"dairy\" ?\n                <Item size={portion.size} type={portion.type} id={portion.id} key={portion.id} /> : \"\")\n        });\n\n        const targets = this.state.meals.map((meal, indx) => {\n            return <Target portions={this.state.meals[indx].portions} meal={this.state.meals[indx].meal} key={meal.meal} handleDrop={(item, meal) => this.moveItem(item, meal)} />\n        });\n\n        return (\n            <div>\n                <Counter portionDailyTarget={this.state.portions} />\n                <div style={{ \"float\": \"left\" }}>\n                    {fruit}\n                </div>\n                <div style={{ \"float\": \"left\" }}>\n                    {vegetables}\n                </div>\n                <div style={{ \"float\": \"left\" }}>\n                    {grains}\n                </div>\n                <div style={{ \"float\": \"left\" }}>\n                    {protein}\n                </div>\n                <div style={{ \"float\": \"left\" }}>\n                    {dairy}\n                </div>\n                <br style={{ \"clear\": \"both\" }} />\n                {targets}\n            </div >\n        );\n    };\n};\n\nexport default DragDropContext(HTML5Backend)(Grid);","import React from \"react\";\nimport \"../Home/css/style.css\";\nimport logo from \"../Home/css/img/plate.png\";\n\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div className =\"container\">\n        <div className=\"home-header\">Welcome!</div>\n\n        <div className=\"logo\">\n          <img className=\"logo\" src={logo} alt=\"logo\"/>\n        </div>\n\n        <div className=\"button-group\">\n          <a href=\"/form\">\n            <button className=\"button1\">Form</button>\n          </a>\n\n          <a href=\"/portion\">\n            <button className=\"button2\">Portion</button>\n          </a>\n\n          <a href=\"/grid\">\n            <button className=\"button3\">Grid</button>\n          </a>\n         \n        </div>\n\n        <div className=\"textArea\"> A portion managing app that does the counting for you\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\n\nclass Toggle extends Component {\n\n    state = {\n        on: false,\n    }\n\n    toggle = () => {\n        this.setState({\n            on: !this.state.on\n        })\n    }\n\n    render() {\n        const { children } = this.props;\n        return children({\n            on: this.state.on,\n            toggle: this.toggle\n        });\n    }\n}\n\nexport default Toggle;\n\n","import React, { Component } from \"react\";\nimport Toggle from \"../../components/Toggle\";\nimport \"../Portion/css/style.css\";\n\n\nclass Portion extends Component {\n    render() {\n        return (\n            <div className=\"toggleButtons\">\n\n                < Toggle>\n                    {({ on, toggle }) => (\n                        <div className=\"card-container\">\n                            {on && <div className=\"card\">1.5 cups means 1 cup raw, frozen or canned / .5 cups dried</div>}\n                            <button className=\"food-group\"  onClick={toggle}>Fruits</button>\n                        </div>\n                    )}\n                </Toggle>\n\n                < Toggle>\n                    {({ on, toggle }) => (\n                        <div className=\"card-container\">\n                            {on && <div className=\"card\">2.5 cups means 1 cup raw, frozen or canned / 2 cups leafy / 1 cup juiced</div>}\n                            <button className=\"food-group\" onClick={toggle}>Vegetables</button>\n                        </div>\n                    )}\n                </Toggle>\n\n                < Toggle>\n                    {({ on, toggle }) => (\n                        <div className=\"card-container\">\n                            {on && <div className=\"card\">5 oz means 1 oz cooked or canned lean meat like poultry or seafood / 1 egg / 1 tbsp peanut butter / 1/4 cup cooked beans or peas / 1/2 oz of nuts or seeds</div>}\n                            <button className=\"food-group\" onClick={toggle}>Protein</button>\n                        </div>\n                    )}\n                </Toggle>\n\n                < Toggle>\n                    {({ on, toggle }) => (\n                        <div className=\"card-container\">\n                            {on && <div className=\"card\">6 oz means 1 slice of bread / 1 oz of ready to eat cereal</div>}\n                            <button className = \"food-group\" onClick={toggle}>Grains</button>\n                        </div>\n                    )}\n                </Toggle>\n\n                < Toggle>\n                    {({ on, toggle }) => (\n                        <div className=\"card-container\">\n                            {on && <div className=\"card\">3 cups means 1 cup of milk / 1 cup of yogurt / 1 oz of fat cheese / 1.5 oz of natural cheese / 1 cup of procedded cheese</div>}\n                            <button className=\"food-group\" bttn-jelly onClick={toggle}>Dairy</button>\n                        </div>\n                    )}\n                </Toggle>\n            </div >\n        );\n    }\n}\nexport default Portion;","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Form from './pages/Form';\nimport Grid from './pages/Grid';\nimport Home from './pages/Home';\nimport Portion from './pages/Portion';\n// import Toggle from './components/Toggle';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/form\" component={Form} />\n        <Route exact path=\"/portion\" component={Portion} />\n        <Route exact path=\"/grid\" component={Grid} />\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/plate.a35a84d4.png\";"],"sourceRoot":""}